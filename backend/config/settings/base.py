"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import json
import os
from datetime import timedelta

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = os.path.dirname(BASE_DIR)


with open(os.path.join(ROOT_DIR, '.config_secret', 'secret_common.json')) as f:
    config_secret_common_str = f.read()

config_secret_common = json.loads(config_secret_common_str)

TEMPLATE_DIR = os.path.join(ROOT_DIR, 'templates')
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

ENV = "local"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in prod secret!
SECRET_KEY = config_secret_common['DJANGO']['SECRET_KEY']
HOST_URL = 'http://localhost:8000'

# SECURITY WARNING: don't run with debug turned on in prod!
DEBUG = os.environ.get('DEBUG', "true") == "true" 

ALLOWED_HOSTS = ['*']

# REDIS_HOST = config_secret_common['REDIS']['HOST'] if len(config_secret_common['REDIS']['HOST']) > 0 else None
REDIS_HOST = 'redis'
# REDIS_PORT = config_secret_common['REDIS']['PORT'] if len(config_secret_common['REDIS']['HOST']) > 0 else None
REDIS_PORT = 6379

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Auth
AUTH_USER_MODEL = 'member.User'

# login
LOGIN_URL = '/login/'
APPEND_SLASH=False

# DJANGO ADMIN INTERFACE
X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]


# Application definition
INSTALLED_APPS = [
    'admin_interface',
    'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    
    'django.contrib.gis',
    'storages',
    
    # own
    'alert',
    'products.apps.ProductsConfig',
    'crawler',
    'bids.apps.BidsConfig',
    'orders.apps.OrdersConfig',
    'member.apps.MemberConfig',
    'cs.apps.CsConfig',
    'article',
    'ads',
    'analytics',
    
    # 3rd party
    'django_extensions',
    'celery',
    'redis',
    'corsheaders',
    # 'django_crontab',
    "rest_framework",
    "rest_framework_simplejwt",
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'analytics.middleware.UserActivityMiddleware',
    'analytics.middleware.ViewMiddleware',
]

# AUTHENTICATION_BACKENDS = [
#     'member.backends.NamePhoneBackend', 'member.backends.AdminBackend'
# ]

# SERIALIZATION_MODULES = {
#     "geojson": "django.contrib.gis.serializers.geojson",
# }

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 
                        'http://localhost:3001', 
                        'http://localhost:8000',
                        'http://59.5.239.156:3000',
                        'https://api.nallanalla.com',
                        'https://nallanalla.com', 
                        'https://www.nallanalla.com']

CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 
                        'http://localhost:3001', 
                        'http://localhost:8000',
                        'http://59.5.239.156:3000',
                        'https://api.nallanalla.com',
                        'https://nallanalla.com',
                        'https://www.nallanalla.com']

PHONE_HASH_KEY = config_secret_common['DJANGO']['PHONE_HASH_KEY']

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# DATABASE with RDS
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        # 'ENGINE': 'django.db.backends.postgresql',
        'HOST': config_secret_common['DB']['HOST'],
        'NAME': config_secret_common['DB']['NAME'],
        'USER': config_secret_common['DB']['USER'],
        'PASSWORD': config_secret_common['DB']['PASSWORD'],
        'PORT': config_secret_common['DB']['PORT'],
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators


#  deprecated
# AUTH_PASSWORD_VALIDATORS = [ 
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#         'OPTIONS': {
#             'min_length': 4
#         }
#     },
# ]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/


# aligo
#ALIGO_TOKEN = config_secret_common['aligo']['token']
#ALIGO_USER_ID = config_secret_common['aligo']['userid']


# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config_secret_common['email']['host']
EMAIL_HOST_USER = config_secret_common['email']['user']
EMAIL_HOST_PASSWORD = config_secret_common['email']['password']
EMAIL_PORT = config_secret_common['email']['port']
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_FROM_EMAIL = config_secret_common['email']['from_email']
# ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# CELERY_IMPORTS = ('utils.email', 'utils.async_function','imageanalyze')
# CELERY_QUEUES = {
#     'create_or_update_assets_instance_queue': {
#         'exchange': 'create_or_update_assets_instance',
#         'routing_key': 'create_or_update_assets_instance',
#     },
# }

#S3
AWS_PRELOAD_METADATA = True
AWS_ACCESS_KEY_ID = config_secret_common['AWS']['aws_access_key_id']
AWS_SECRET_ACCESS_KEY = config_secret_common['AWS']['aws_secret_access_key']
AWS_STORAGE_BUCKET_NAME = config_secret_common['S3']['bucket']
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_LOCATION = 'nallanallamedia/static'

# STATIC
MEDIA_URL = 'nallanallamedia/media/'
MEDIA_LOCATION = 'nallanallamedia/media'
MEDIA_ROOT = os.path.join(ROOT_DIR, 'media')
DEFAULT_FILE_STORAGE = 'config.storage_backends.MediaStorage'

STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),  # 액세스 토큰의 유효 시간 설정
    'REFRESH_TOKEN_LIFETIME': timedelta(days=15),  # 리프레시 토큰의 유효 시간 설정
    'AUTH_COOKIE': 'nallanalla_jwt',
}

SITE_ID = 1

# SES
#SES_REGION = config_secret_common['SES']['region']
#SES_KEY_ID = config_secret_common['SES']['key']
#SES_SECRET_KEY = config_secret_common['SES']['secret']

# SOCIAL
# NAVER_CLIENT_ID = config_secret_common['naverlogin']['clientID']
# NAVER_SECRET = config_secret_common['naverlogin']['clientSecret']
KAKAO_APP_KEY = config_secret_common['kakao']['app_key']
KAKAO_CLIENT_ID = config_secret_common['kakao']['rest_api_key']
KAKAO_SECRET = config_secret_common['kakao']['rest_api_key']


# SOCIALACCOUNT_PROVIDERS = {
#     'kakao': {
#         'SCOPE': ['account_email', 'profile_nickname','	gender'],
#         'INIT_PARMAS': {'cookie', True},
#         'FILEDS': [
#             # 'id',
#             'account_email',
#             'profile',
#             'phone_number',
#         ],
#         'EXCHANGE_TOKEN': True,
#         'LOCALE_FUNC': lambda request: 'kr_KR',
#         'VERIFIED_EMAIL': False,
#         'VERSION': 'v2.12',
#         'REDIRECT_URI': 'http://localhost:8000/accounts/kakao/login/callback/',
#     },
#     'naver': {
#         'SCOPE': ['name','account_email', 'profile'],
#         'INIT_PARMAS': {'cookie', True},
#         'FILEDS': [
#             # 'id',
#             'account_email',
#             'profile',
#         ],
#         'EXCHANGE_TOKEN': True,
#         'LOCALE_FUNC': lambda request: 'kr_KR',
#         'VERIFIED_EMAIL': False,
#         'VERSION': 'v1',
#         'REDIRECT_URI': 'http://localhost:8000/accounts/naver/login/callback/',
#     },
# }

# SOCIALACCOUNT_ADAPTER = 'member.adapter.SocialAccountAdapter'


# channels
# ASGI_APPLICATION = "config.asgi.application"
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [(os.environ.get('REDIS_HOST', "redis"), 6379)],
#         },
#     },
# }

# FILE_UPLOAD_HANDLERS
FILE_UPLOAD_HANDLERS = [
    # 'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]
CRONJOBS = [
    
]


